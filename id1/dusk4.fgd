//
// DUSK game definition file (.fgd) (ALPHA)
// For Trenchbroom. (We never tested it with Jackhammer, so no guarantees ¯\_(ツ)_/¯ )

// Original Quake FGD written by autolycus / autolycus@planetquake.com
// Modified by XaeroX / support@hlfx.ru (VEVEN's comment: I'm not sure, but I think this refers to the Jackhammer compatibility edits?)

// Modified by VEVEN#3391 and Vriska#3320 to specifically work with DUSK SDK (13.01.2021)
// Thanks to Zombie#1795 for providing models
//

//
// worldspawn
//

@SolidClass = worldspawn : "World entity"
[
	message(string) : "Text on entering the world"
	light(integer) : "Default light level"
	music(string) : "Music that plays at the start of the map"
	sky_up(string) : "Top texture of the skybox"
	sky_down(string) : "Bottom texture of the skybox"
	sky_left(string) : "Right texture of the skybox and yes there is no mistake here"
	sky_right(string) : "Left texture of the skybox and yes there is no mistake here"
	sky_front(string) : "Front texture of the skybox"
	sky_back(string) : "Back texture of the skybox"
]

//
// base marker definitions
//

@baseclass = Appearflags [
	spawnflags(Flags) =
	[
		256 : "Not in Easy" : 0
		512 : "Not in Normal" : 0
		1024 : "Not in Hard" : 0
		2048 : "Not in Deathmatch" : 0
	]
]

@baseclass = Targetname [ targetname(target_source) : "Name" ]
@baseclass = Target [ target(target_destination) : "Target" ]

//
// player starts, teleport
//

@baseclass base(Appearflags) flags(Angle) size(-16 -16 -24, 16 16 32) offset(0 0 24)
	color(0 255 0) = PlayerClass []

@PointClass base(PlayerClass) = info_player_start : "Player 1 start" []
@PointClass base(PlayerClass, Targetname) = info_teleport_destination : "Teleport destination" []
@PointClass = info_null : "info_null (spotlight target)"
[
	targetname(target_source) : "Name"
]

//
// CTF stuff
//

@PointClass base(Appearflags) = info_intermission : "Intermission camera" []

//
// items
//

@baseclass size(32 32 32) color(80 0 200) base(Appearflags) = Ammo
[
	spawnflags(flags) =
	[
		1 : "Large box" : 0
	]
]

@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 24) base(Appearflags) studio("progs/cardb.mdl") =
	key_blue_card : "Blue Key Card" []
@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 24) base(Appearflags) studio("progs/keyb.mdl") =
	key_blue_key : "Blue Key" []
@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 24) base(Appearflags) studio("progs/mkeyb.mdl") =
	key_blue_magic : "Blue Magic Key" []
@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 24) base(Appearflags) studio("progs/cardr.mdl") =
	key_red_card : "Red Key Card" []
@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 24) base(Appearflags) studio("progs/keyr.mdl") =
	key_red_key : "Red Key" []
@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 24) base(Appearflags) studio("progs/mkeyr.mdl") =
	key_red_magic : "Red Magic Key" []
@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 24) base(Appearflags) studio("progs/cardy.mdl") =
	key_yellow_card : "Yellow Key Card" []
@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 24) base(Appearflags) studio("progs/keyy.mdl") =
	key_yellow_key : "Yellow Key" []
@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 24) base(Appearflags) studio("progs/mkeyy.mdl") =
	key_yellow_magic : "Yellow Key Magic" []

//
// badasses
//

@baseclass base(Appearflags, Targetname, Target) flags(Angle) color(220 0 0) offset(0 0 24) = Monster
[
	spawnflags(Flags) =
	[
		1 : "Ambush" : 0
	]
]

@PointClass base(Monster) size(-16 -16 -38, 16 16 34) studio("progs/dgrunt.mdl") = monster_soldier : "Grunt" []
@PointClass base(Monster) size(-16 -16 -32, 16 16 44) studio("progs/bigjohn.mdl") = monster_bigjohn : "Big John" []
@PointClass base(Monster) size(-16 -16 -40, 16 16 40) studio("progs/jakob.mdl") = monster_jakob : "Jakob" []
@PointClass base(Monster) size(-16 -16 -48, 16 16 32) studio("progs/leather.mdl") = monster_leatherneck : "Leatherneck" []
@PointClass base(Monster) size(-32 -32 -24, 32 32 48) studio("progs/blackph.mdl") = monster_blackphillip : "Black Phillip" []
@PointClass base(Monster) size(-16 -16 -40, 16 16 44) studio("progs/mage.mdl") = monster_mage : "Mage Wizard" []
@PointClass base(Monster) size(-32 -32 -40, 32 32 64) studio("progs/magered.mdl") = monster_mage_red : "Grand Wizard" []
@PointClass base(Monster) size(-16 -16 -72, 16 16 32) studio("progs/scarcrow.mdl") = monster_scarecrow : "Scarecrow" []
@PointClass base(Monster) size(-16 -16 -24, 16 16 80) studio("progs/hknight.mdl") = monster_scarecrow_post : "Scarecrow on post" []
@PointClass base(Monster) size(-16 -16 -48, 16 16 32) studio("progs/forkmaid.mdl") = monster_forkmaiden : "Fork Maiden" []
@PointClass base(Monster) size(-16 -16 -2, 16 16 14) studio("progs/rat.mdl") = monster_rat : "Rat" []
@PointClass base(Monster) size(-48 -48 -8, 48 48 32) studio("progs/ratboss.mdl") = monster_rat_boss : "Rat Boss" []
@PointClass base(Monster) size(-32 -32 -24, 32 32 64) studio("progs/welder.mdl") = monster_welder : "Welder" []
@PointClass base(Monster) size(-16 -16 -40, 16 16 40) studio("progs/science.mdl") = monster_scientist : "Scientist" []
@PointClass base(Monster) size(-32 -32 -56, 32 32 32) studio("progs/wendigo.mdl") = monster_wendigo : "Wendigo" []
@PointClass base(Monster) size(-16 -16 -88, 16 16 40) studio("progs/cowgirl.mdl") = monster_cowgirl : "Cowgirl" []
@PointClass base(Monster) size(-16 -16 -2, 16 16 46) studio("progs/turret.mdl") = monster_turret : "Turret" []
@PointClass base(Monster) size(-32 -32 -64, 32 32 40) studio("progs/priest.mdl") = monster_priestess : "Priestess" []
@PointClass base(Monster) size(-48 -48 -16, 48 48 72) studio("progs/cartdog.mdl") = monster_cartdog : "Nasty Doggie" []
@PointClass base(Monster) size(-32 -32 -24, 32 32 64) studio("progs/bonemonk.mdl") = monster_bonemonk : "Bone Monk" []
@PointClass base(Monster) size(32 32 48) studio("progs/chomper.mdl") = monster_fish : "Chomper's Son" []
@PointClass base(Monster) size(-16 -16 -64, 16 16 32) studio("progs/horror.mdl") = monster_horror : "Horror" []
@PointClass base(Monster) size(-64 -64 -64, 64 64 64) studio("progs/boneball.mdl") = monster_boneball : "Bone Ball" []
@PointClass base(Monster) size(-48 -48 -24, 48 48 40) studio("progs/gator.mdl") = monster_intoxigator : "Intoxigator" []
@PointClass base(Monster) size(-32 -32 -40, 32 32 0) studio("progs/gators.mdl") = monster_intoxigator_small : "Intoxigator Small" []
@PointClass base(Monster) size(-32 -32 -40, 32 32 0) studio("progs/gators.mdl") = monster_intoxigator_son : "Intoxigator's Son" []
@PointClass base(Monster) size(-64 -64 -88, 64 64 88) studio("progs/horse.mdl") = monster_experiment : "The Experiment" []
@PointClass base(Monster) size(-32 -32 -32, 32 32 40) studio("progs/horsef.mdl") = monster_experiment_failed : "The Experiment (Failed)" []
@PointClass base(Monster) size(-64 -64 -64, 64 64 64) studio("progs/chomper.mdl") = monster_chomper : "Chomper" []
@PointClass base(Monster) size(-16 -16 -120, 16 16 40) studio("progs/mama.mdl") = monster_mama : "Mama Cowgirl" []
@PointClass base(Monster) size(-64 -64 -48, 64 64 112) studio("progs/guardian.mdl") = monster_guardian : "Guardian" []
@PointClass base(Monster) size(-16 -16 -24, 16 16 32) studio("progs/oldone.mdl") = monster_nyarlathotep : "Nyarlathotep" []

//
// lights
//

@BaseClass = Light
[
	light(integer) : "Brightness" : 300 : "Light brightness level."
	style(Choices) : "Appearance" : 0 : "Light appearance. Values:" =
	[
		0 : "Normal"
		10: "Fluorescent flicker"
		2 : "Slow, strong pulse"
		11: "Slow pulse, noblack"
		5 : "Gentle pulse"
		1 : "Flicker A"
		6 : "Flicker B"
		3 : "Candle A"
		7 : "Candle B"
		8 : "Candle C"
		4 : "Fast strobe"
		9 : "Slow strobe"
	]
	pattern(string) : "Custom Appearance" : : "Use a string of letters to provide a custom light style. The property allows you to enter a string of letters from a to z, representing brightness. If you entered 'abcdefghihgfedcba' then the light would go from bright to dim and back again and then repeat. Complicating things, to use this feature, you must name the light. However, if you then use a trigger to activate it, then it will behave as a normal light."
]

@PointClass size(-8 -8 -8, 8 8 8) flags(Light) base(Targetname, Target, Light) iconsprite("sprites/light.spr") =
	light : "Invisible lightsource"
	[
		spawnflags(Flags) = [ 1 : "Initially dark" : 0 ]
	]

//
// moving things
//

@SolidClass = func_detail : "Detail brushes" []

@SolidClass = func_clip : "Clip brushes" []

@SolidClass = func_detail_wall : "Wall brushes can be seen through"  []

@SolidClass = func_detail_fence : "Fence brushes can be seen through" []

@SolidClass = func_group : "Groups up a bunch of brushes together" []

@baseclass base(Appearflags, Targetname) = Door
[
	speed(integer) : "Speed" : 100
	key(choices) : "Key Lock" : 0 =
	[
		0 : "Unlocked"
		1 : "Red Key"
		2 : "Blue Key"
		3 : "Yellow Key"
	]
	wait(choices) : "Delay before close" : 4 =
	[
		-1 : "Stays open"
	]
	lip(integer) : "Lip"
	dmg(integer) : "Damage inflicted when blocked" : 0
	message(string) : "Message if triggered"
	health(integer) : "Health (shoot open)" : 0
	parentname(string) : "Name of the parent entity"
]

@SolidClass base(Door) = func_door : "Basic door"
[
	spawnflags(flags) =
	[
		1 : "Starts Open" : 0
		4 : "Don't link" : 0
		8 : "Gold Key required" : 0
        16: "Silver Key required" : 0
        32: "Toggle" : 0
	]
]

@SolidClass base(Door) = func_door_secret : "Triggered door"
[
	spawnflags(flags) =
	[
		1 : "Open once only" : 0
		2 : "Moves left first" : 0
		4 : "Moves down first" : 0
		8 : "Not shootable" : 0
        16 : "Always shootable" : 0
	]
]

@SolidClass base(Door) = func_door_rotating : "Rotating door"
[
	spawnflags(flags) =
	[
		2 : "Reverse Dir" : 0
		16: "One-way" : 0
		64: "X Axis" : 0
		128: "Y Axis" : 0
	]
	distance(integer) : "Distance (deg)" : 90
]

@SolidClass = func_button : "Button"
[
	speed(integer) : "Speed" : 5
	target(target_destination) : "Targeted object"
	health(integer) : "Health (shootable if > 0)"
	sounds(choices) : "Sounds" : 1 =
	[
		1: "Steam metal"
		2: "Wooden clunk"
		3: "Metallic clink"
		4: "In-out"
	]
	wait(choices) : "Delay before reset" : 3 =
	[
		-1: "Stays pressed"
	]
	delay(integer) : "Delay before trigger"
]

@PointClass base(Targetname) flags(Path) size(16 16 16) = path_corner : "Moving platform stop"
[
	target(target_destination) : "Next stop target"
]

@SolidClass = func_plat : "Elevator"
[
	height(integer) : "Travel altitude (can be negative)" : 0
	sounds(choices) : "Sound group" : 1 =
	[
		0: "None"
		1: "Base fast"
		2: "Chain Slow"
	]
]

@SolidClass = func_illusionary : "Solids can be walked through" []

//
// triggers
//

@baseclass base(Target) = Trigger
[
	style(integer) : "Style" : 32
	killtarget(target_destination) : "Kill target"
	sounds(choices) : "Sound style" : 3 =
	[
		1 : "Secret sound"
		2 : "Beep beep"
		3 : "Large switch"
		4 : "Set message to text string"
	]
	delay(integer) : "Delay before trigger" : 2
	message(string) : "Message (set sound too!)"
]

@SolidClass = trigger_changelevel : "Trigger: Change level"
[
	map(string) : "New map name"
	spawnflags(flags) =
	[
		1: "No Intermission" : 0
	]
]

@SolidClass base(Trigger) = trigger_once : "Trigger: Activate once"
[
	spawnflags(flags) = [ 1: "Entity only" : 0 ]
]
@SolidClass base(Trigger) = trigger_multiple : "Trigger: Activate multiple"
[
	spawnflags(flags) = [ 1: "Entity only" : 0 ]
	wait(integer) : "Delay before reset" : 10
]
@SolidClass base(Trigger) = trigger_secret : "Trigger: Secret"
[
	spawnflags(flags) = [ 1: "Entity only" : 0 ]
	wait(integer) : "Delay before reset" : 10
]

@SolidClass base(Targetname, Target) = trigger_teleport : "Trigger teleport"
[
	spawnflags(Flags) =
	[
		1 : "Player only" : 0
		2 : "Silent" : 0
	]
]

@SolidClass base(Trigger) = trigger_push : "Trigger player push"
[
	spawnflags(flags) = [ 1: "Once Only" : 0 ]
	speed(integer) : "Speed of push" : 40
]
@SolidClass base(Trigger) = trigger_hurt : "Trigger player hurt"
[
	dmg(integer) : "Damage" : 10
]

//
// Half-Life things
//

@BaseClass = RenderFields
[
	rendermode(choices) : "Render Mode" : 0 : "Controls the type of rendering that is used for an object. Options are:" =
	[
		0: "Normal"
		1: "Color"
		2: "Texture"
		3: "Glow"
		4: "Solid"
		5: "Additive"
	]
	renderamt(integer) : "FX Amount (1 - 255)"
	rendercolor(color255) : "FX Color (R G B)" : "0 0 0"
]

@BaseClass = Global
[
	globalname(string) : "Global Entity Name"
]

@BaseClass = Angles
[
	angles(string) : "Pitch Yaw Roll (Y Z X)" : "0 0 0" : "Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in Jackhammer corresponds to Yaw. The settings are not always (or not all) used."
]

@BaseClass base(Targetname, RenderFields) = Breakable
[
	target(target_destination) : "Target on break"
	health(integer) : "Strength" : 1
	material(choices) :"Material type" : 0 =
	[
		0: "Glass"
		1: "Wood"
		2: "Metal"
		3: "Flesh"
		4: "Cinder Block"
		5: "Ceiling Tile"
		6: "Computer"
		7: "Unbreakable Glass"
		8: "Rocks"
	]
]

@SolidClass base(Appearflags, RenderFields) = func_wall : "Moving wall" []

@SolidClass base(Breakable) = func_breakable : "Breakable Object"
[
	spawnflags(flags) =
	[
		1 : "Only Trigger" : 0
		2 : "Touch"	   : 0
		4 : "Pressure"     : 0
		256: "Instant Melee" : 0
	]
]

@SolidClass base(Targetname) = func_ladder : "Ladder" []

@SolidClass base(Breakable) = func_pushable : "Pushable object"
[
	spawnflags(flags) =
	[
		128: "Breakable" : 0
	]
	friction(integer) : "Friction (0-400)" : 50
	buoyancy(integer) : "Buoyancy" : 20
]

@SolidClass base(Targetname, Global, Angles) = func_rotating : "Rotating Object"
[
	speed(integer)	: "Rotation Speed" : 0
	spawnflags(flags) =
	[
		1 : "Start ON" 		: 0
		2 : "Reverse Direction" : 0
		4 : "X Axis" 		: 0
		8 : "Y Axis" 		: 0
		16: "Acc/Dcc"		: 0
		32: "Fan Pain"		: 0
		64: "Not Solid"		: 0
		128: "Small Radius" : 0
		256: "Medium Radius" : 0
		512: "Large Radius" : 1
	]
	spawnorigin(string) : "X Y Z - Move here after lighting" : "0 0 0"
	dmg(integer) : "Damage inflicted when blocked" : 0
]

@SolidClass base(Door) = func_water : "Liquid"
[
	spawnflags(flags) =
	[
		1 : "Starts Open" : 0
		256:"Use Only" : 0
	]
]

@PointClass base(Targetname, Angles) iconsprite("sprites/light_environment.spr") flags(Light) = light_environment : "This entity makes a map's sky emit light. The only practical way of lighting outdoor maps."
[
	pitch(integer) : "Pitch" : 0 : "A negative number will give downward pitch (which is normally what you want)."
	_light(color255) : "Brightness" : "255 255 128 200" : "First three integer numbers are the color (RGB). The fourth number is the brightness."
]

//
// Dusk stuff
//

@PointClass = multi_manager : "Allows to target multiple entities, with a potential delay between fires"
[
		targetname(string) : "Name through which this entity is triggered"
]
@PointClass size(-16 -16 -24, 16 16 32) offset(0 0 24) base(Appearflags, Angles) studio("progs/fastfire.mdl") =
	pickup_fast_fire : "Fast fire" []
@PointClass size(-16 -16 -24, 16 16 32) offset(0 0 24) base(Appearflags) studio("progs/climb.mdl") =
	pickup_climber : "Climber" []
@PointClass size(-16 -16 -24, 16 16 32) offset(0 0 24) base(Appearflags) studio("progs/hev.mdl") =
	pickup_lava_suit : "Lava suit" []
@PointClass size(-16 -16 -16, 16 16 16) offset(0 0 24) base(Appearflags) studio("progs/coinbag.mdl") =
	pickup_bag : "Bag" []
@PointClass size(-16 -16 -24, 16 16 32) offset(0 0 24) base(Appearflags) studio("progs/dpack.mdl") =
	pickup_backpack : "Backpack" []
@PointClass size(-16 -16 -16, 16 16 16) base(Appearflags) studio("progs/coin.mdl") skin(2) =
	pickup_coin : "Coin" []
@PointClass size(-16 -16 -16, 16 16 16) base(Appearflags) studio("progs/diamond.mdl") skin(2) =
	pickup_diamond : "Diamond" []
@PointClass base(Ammo) studio("progs/flash.mdl") = pickup_flashlight : "Flashlight" []
@PointClass base(Ammo) studio("progs/mortammo.mdl") = pickup_grenade : "Grenade" []
@PointClass base(Ammo) studio("progs/gbox.mdl") = pickup_grenade_box : "Grenade Box" []
@PointClass size(-16 -16 -16, 16 16 16) base(Appearflags) studio("progs/halhp.mdl") = pickup_health_hallowed : "Hallowed Health" []
@PointClass size(-16 -16 -16, 16 16 16) base(Appearflags) studio("progs/hkit.mdl") = pickup_health_large : "Large Health" []
@PointClass size(-16 -16 -16, 16 16 16) base(Appearflags) studio("progs/skit.mdl") = pickup_health_medium : "Medium Health" []
@PointClass size(-16 -16 -16, 16 16 16) base(Appearflags) studio("progs/1health.mdl") = pickup_health_small : "Small Health" []
@PointClass size(-16 -16 -16, 16 16 16) base(Appearflags) studio("progs/suphot.mdl") = pickup_serum : "Serum" []
@PointClass base(Ammo) studio("progs/crosammo.mdl") = pickup_arrows : "Arrows" []
@PointClass base(Ammo) studio("progs/mgunclip.mdl") = pickup_mg_clip : "MG Clip" []
@PointClass base(Ammo) studio("progs/onebull.mdl") = pickup_pistol_bullet : "Pistol Bullet" []
@PointClass base(Ammo) studio("progs/pclip.mdl") = pickup_pistol_clip : "Pistol Clip" []
@PointClass base(Ammo) studio("progs/pbox.mdl") = pickup_bullet_box : "Pistol Bullets" []
@PointClass base(Ammo) studio("progs/hrbox.mdl") = pickup_rifle_box : "Rifle Box" []
@PointClass base(Ammo) studio("progs/hrsingle.mdl") = pickup_rifle_bullet : "Rifle Bullet" []
@PointClass base(Ammo) studio("progs/rivet.mdl") = pickup_rivet : "Rivet" []
@PointClass base(Ammo) studio("progs/shellbox.mdl") = pickup_shotgun_box : "Shells" []
@PointClass base(Ammo) studio("progs/shell.mdl") = pickup_shotgun_shell : "Single Shell" []

@baseclass size(-16 -16 -16, 16 16 16) color(0 0 200) base(Appearflags) = Weapon []
@PointClass base(Weapon) studio("progs/sword.mdl") = weapon_sword : "Sword" []
@PointClass base(Weapon) studio("progs/pistol.mdl") = weapon_pistol : "Pistol" []
@PointClass base(Weapon) studio("progs/shotgun.mdl") = weapon_shotgun : "Shotgun" []
@PointClass base(Weapon) studio("progs/ssg.mdl") = weapon_supershotgun : "Super shotgun" []
@PointClass base(Weapon) studio("progs/mgun.mdl") = weapon_mg : "Assault Rifle" []
@PointClass base(Weapon) studio("progs/rifle.mdl") = weapon_rifle : "Rifle" []
@PointClass base(Weapon) studio("progs/crossbow.mdl") = weapon_crossbow : "Crossbow" []
@PointClass base(Weapon) studio("progs/mortar.mdl") = weapon_mortar : "Mortar" []
@PointClass base(Weapon) studio("progs/riveter.mdl") = weapon_riveter : "Riveter" []

@PointClass offset(0 0 8) size(-16 -16 -24, 16 16 32) studio("progs/barrel.mdl") = prop_barrel []
@PointClass offset(0 0 8) size(-16 -16 -24, 16 16 32) studio("progs/barex1.mdl") = prop_barrel_exploding_1 []
@PointClass offset(0 0 8) size(-16 -16 -24, 16 16 32) studio("progs/barex2.mdl") = prop_barrel_exploding_2 []
@PointClass offset(0 0 8) size(-16 -16 -24, 16 16 32) studio("progs/barex3.mdl") = prop_barrel_exploding_3 []
@PointClass offset(0 0 8) size(-16 -16 -24, 16 16 32) studio("progs/wbarrel.mdl") = prop_barrel_wood []
@PointClass offset(0 0 8) studio("progs/bball.mdl") = prop_basketball []
@PointClass offset(0 0 8) studio("progs/madcryst.mdl") = prop_berserk []
@PointClass offset(0 0 8) studio("progs/2x4.mdl") = prop_board []
@PointClass offset(0 0 8) studio("progs/sbone.mdl") = prop_bone []
@PointClass offset(0 0 8) studio("progs/book.mdl") = prop_book []
@PointClass offset(0 0 8) studio("progs/bottle.mdl") = prop_bottle []
@PointClass offset(0 0 8) studio("progs/box.mdl") = prop_box []
@PointClass offset(0 0 8) studio("progs/metalbox.mdl") = prop_box_metal []
@PointClass offset(0 0 8) studio("progs/brick.mdl") = prop_brick []
@PointClass offset(0 0 8) studio("progs/bucket.mdl") = prop_bucket []
@PointClass offset(0 0 8) studio("progs/buzzsaw.mdl") = prop_buzzsaw []
@PointClass offset(0 0 8) studio("progs/can.mdl") = prop_can []
@PointClass offset(0 0 8) studio("progs/candle.mdl") = prop_candle []
@PointClass offset(0 0 8) size(-16 -16 -24, 16 16 32) studio("progs/chair.mdl") = prop_chair []
@PointClass offset(0 0 8) studio("progs/cleaver.mdl") = prop_cleaver []
@PointClass offset(0 0 8) studio("progs/fork.mdl") = prop_fork []
@PointClass offset(0 0 8) studio("progs/gascan.mdl") = prop_gascan []
@PointClass offset(0 0 8) studio("progs/gib.mdl") = prop_gib []
@PointClass offset(0 0 8) studio("progs/hammer.mdl") = prop_hammer []
@PointClass offset(0 0 8) size(-32 -32 -16, 32 32 16) studio("progs/hayblock.mdl") = prop_hay []
@PointClass offset(0 0 8) size(-32 -32 -16, 32 32 16) studio("progs/log.mdl") = prop_log []
@PointClass offset(0 0 8) size(-8 -8 -24, 8 8 32) studio("progs/pipe.mdl") = prop_pipe []
@PointClass offset(0 0 8) size(-16 -16 -64, 16 16 32) studio("progs/pitch.mdl") = prop_pitchfork []
@PointClass offset(0 0 8) studio("progs/plate.mdl") = prop_plate []
@PointClass offset(0 0 8) studio("progs/pliers.mdl") = prop_pliers []
@PointClass offset(0 0 8) size(-16 -16 -16, 16 16 16) studio("progs/ribs.mdl") = prop_ribs []
@PointClass offset(0 0 8) studio("progs/bigrock.mdl") = prop_rock_big []
@PointClass offset(0 0 8) studio("progs/srock.mdl") = prop_rock_small []
@PointClass offset(0 0 8) studio("progs/skull.mdl") = prop_skull []
@PointClass offset(0 0 8) studio("progs/soap.mdl") = prop_soap []
@PointClass size(32 32 16) offset(0 0 8) studio("progs/tire.mdl") = prop_tire []
@PointClass size(-8 -8 -32, 8 8 0) offset(0 0 8) studio("progs/torch2.mdl") = prop_torch []
@PointClass offset(0 0 8) studio("progs/vase.mdl") = prop_vase []

@PointClass size(-16 -16 -8, 16 16 48) offset(0 0 8) studio("progs/altar.mdl") = object_altar []
@PointClass size(-16 -16 -8, 16 16 48) studio("progs/anomaly.mdl") = object_anomaly []
@PointClass size(-48 -48 -6, 48 48 12) offset(0 0 6) studio("progs/anofire.mdl") = object_anomaly_fire []
@PointClass size(-48 -48 -20, 48 48 24) offset(0 0 20) studio("progs/bed.mdl") = object_bad []
@PointClass size(-128 -128 -32, 128 128 224) offset(0 0 32) studio("progs/machine1.mdl") = object_big_machine []
@PointClass size(-32 -32 0, 96 32 100) studio("progs/machine2.mdl")= object_big_machine_2 []
@PointClass size(-56 -32 0, 8 32 128) offset(24 0 0) studio("progs/machine3.mdl") = object_big_machine_3 []
@PointClass size(-48 -48 -72, 48 48 72) offset(0 0 72) studio("progs/blades.mdl") = object_blades []
@PointClass size(-8 -8 -24, 8 8 24) offset(-8 0 0) studio("progs/blower.mdl") = object_blower []
@PointClass size(-2 -32 -32, 2 32 32) offset(-2 0 32) studio("progs/board.mdl") = object_board []
@PointClass size(-64 -64 -48, 64 64 32) offset(0 -40 48) studio("progs/dozer.mdl") = object_bulldozer []
@PointClass size(-20 -20 -22, 20 20 24) offset(0 0 22) studio("progs/burnbar.mdl") = object_burn_barrel []
@PointClass size(-32 -32 -32, 32 32 32) offset(0 0 32) studio("progs/bush.mdl") = object_bush []
@PointClass size(-32 -32 -16, 16 32 24) offset(8 0 16) studio("progs/campfire.mdl") = object_campfire []
@PointClass size(-64 -96 -44, 64 96 32) offset(8 0 44) studio("progs/car.mdl") = object_car []
@PointClass offset(0 0 8) studio("progs/cattail.mdl") = object_cattail []
@PointClass offset(0 0 8) studio("progs/cobweb.mdl") = object_cobweb []
@PointClass size(-48 -48 -8, 48 48 48) offset(0 0 8) studio("progs/couch.mdl") = object_couch []
@PointClass offset(0 0 8) studio("progs/cup.mdl") = object_cup []
@PointClass size(-16 -16 -4, 16 16 40) offset(0 0 8) studio("progs/cupboard.mdl") = object_cupboard []
@PointClass offset(0 0 8) studio("progs/etower.mdl") = object_electric_tower []
@PointClass offset(0 0 8) studio("progs/fireshot.mdl") = object_fireball_shooter []
@PointClass offset(0 0 8) studio("progs/wendfly.mdl") = object_floating_wendigo []
@PointClass offset(0 0 8) studio("progs/forklift.mdl") = object_forklift []
@PointClass size(80 80 80) offset(0 0 8) studio("progs/grapple.mdl") = object_grappler []
@PointClass size(-8 -8 0, 8 8 32) offset(0 0 8) studio("progs/grass.mdl") = object_grass []
@PointClass size(-48 -48 -38, 48 48 38) offset(0 0 38) studio("progs/haybig.mdl") = object_hay_bale []
@PointClass offset(0 0 8) studio("progs/insulat.mdl") = object_insulator []
@PointClass size(-48 -48 0, 48 48 16) offset(0 0 8) studio("progs/jumppad.mdl") = object_jump_pad [
	amount(integer) : "Boost amount (Jump pad's strength)" : 1
]
@PointClass size(-8 -8 -24, 8 8 8) offset(0 0 8) studio("progs/lamp.mdl") = object_lamp []
@PointClass offset(0 0 8) studio("progs/leanto.mdl") = object_leanto []
@PointClass offset(0 0 8) studio("progs/fixture1.mdl") = object_light_fixture_1 []
@PointClass offset(0 0 8) studio("progs/fixture2.mdl") = object_light_fixture_2 []
@PointClass offset(0 0 8) studio("progs/fixture3.mdl") = object_light_fixture_3 []
@PointClass size(-8 -8 -56, 8 8 16) offset(0 0 8) studio("progs/post1.mdl") = object_light_post_1 []
@PointClass size(-8 -8 -56, 8 8 16) offset(0 0 8) studio("progs/post2.mdl") = object_light_post_2 []
@PointClass size(-8 -8 -56, 8 8 16) offset(0 0 8) studio("progs/post3.mdl") = object_light_post_3 []
@PointClass size(-24 -24 0, 24 24 80) offset(0 0 8) studio("progs/liquid.mdl") = object_liquid_tank []
@PointClass offset(0 0 8) studio("progs/mech1.mdl") = object_machine_1 []
@PointClass size(-48 -48 -8, 48 48 8) offset(0 0 8) studio("progs/mattress.mdl") = object_mattress []
@PointClass size(-8 -8 -80, 8 8 64) offset(0 0 8) studio("progs/meathook.mdl") = object_meathook []
@PointClass offset(0 0 8) studio("progs/minecart.mdl") = object_minecart []
@PointClass offset(0 0 8) studio("progs/shroom.mdl") = object_mushroom []
@PointClass offset(0 0 8) studio("progs/pew.mdl") = object_pew []
@PointClass offset(0 0 8) studio("progs/pumpkin.mdl") = object_pumpkin_1 []
@PointClass offset(0 0 8) studio("progs/pumpkin2.mdl") = object_pumpkin_2 []
@PointClass offset(0 0 8) studio("progs/shed.mdl") = object_shed []
@PointClass offset(0 0 8) studio("progs/shower.mdl") = object_shower []
@PointClass size(-16 -16 -8, 16 16 8) offset(0 0 8) studio("progs/sink.mdl") = object_sink []
@PointClass offset(0 0 8) studio("progs/speaker.mdl") = object_speaker []
@PointClass size(-8 -8 0, 8 8 192) offset(0 0 8) studio("progs/lghtpost.mdl") = object_streetlight []
@PointClass offset(0 0 8) studio("progs/table1.mdl") = object_table_1 []
@PointClass size(-48 -48 -40, 48 48 0) offset(0 0 8) studio("progs/table2.mdl") = object_table_2 []
@PointClass size(-48 -48 0, 48 48 16) offset(0 0 8) studio("progs/tele.mdl") = object_teleporter []
@PointClass size(-16 -16 -24, 16 16 24) offset(0 0 8) studio("progs/toilet.mdl") = object_toilet []
@PointClass offset(0 0 8) studio("progs/tp.mdl") = object_toiletpaper []
@PointClass offset(0 0 8) studio("progs/torch.mdl") = object_torch []
@PointClass size(144 144 112) offset(0 0 8) studio("progs/tractor.mdl") = object_tractor []
@PointClass base(Angles) size(-32 -32 -24, 32 32 32) offset(0 0 8) studio("progs/trash.mdl") = object_trashbag []
@PointClass offset(0 0 8) studio("progs/trashcan.mdl") = object_trashcan []
@PointClass offset(0 0 8) studio("progs/tree1.mdl") = object_tree_1 []
@PointClass offset(0 0 8) studio("progs/tree2.mdl") = object_tree_2 []
@PointClass offset(0 0 8) studio("progs/tree3.mdl") = object_tree_3 []
@PointClass offset(0 0 8) studio("progs/tree4.mdl") = object_tree_4 []
@PointClass offset(0 0 8) studio("progs/tree5.mdl") = object_tree_5 []
@PointClass offset(0 0 8) studio("progs/treeal.mdl") = object_tree_alive []
@PointClass offset(0 0 8) studio("progs/treebrok.mdl") = object_tree_broken []
@PointClass offset(0 0 8) studio("progs/treepine.mdl") = object_tree_pine []
@PointClass offset(0 0 8) studio("progs/treestum.mdl") = object_tree_stump []
@PointClass offset(0 0 8) studio("progs/treeodd.mdl") = object_tree_surreal []
@PointClass offset(0 0 8) studio("progs/valve.mdl") = object_valve []
@PointClass size(-8 -8 -8, 8 8 80) offset(0 0 8) studio("progs/worklght.mdl") = object_worklight []
